service:
  name: click-and-more-api

plugins:
  - serverless-plugin-scripts
  - serverless-webpack
  - serverless-prune-plugin

provider:
  name: aws
  runtime: nodejs10.x
  region: ap-northeast-2
  stage: ${env:STAGE}
  tracing:
    apiGateway: true
    lambda: true
  apiGateway:
    binaryMediaTypes:
      - "image/*"
  environment:
    PUBLIC_URL: ${env:PUBLIC_URL}
    REDIS_HOST: ${env:REDIS_HOST}
    REDIS_PASSWORD: ${env:REDIS_PASSWORD}
    WS_ENDPOINT: ${env:WS_ENDPOINT}
    GAME_ACTOR_LAMBDA_NAME: ${self:custom.gameActorLambdaName}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - lambda:InvokeFunction
      Resource:
        - Fn::Join:
            - ":"
            - - "arn:aws:lambda"
              - Ref: "AWS::Region"
              - Ref: "AWS::AccountId"
              - "function"
              - ${self:custom.gameActorLambdaName}

custom:
  gameActorLambdaName: ${self:service.name}-${self:provider.stage}-game
  prune:
    automatic: true
    number: 7
  scripts:
    hooks:
      "webpack:package:packExternalModules": /bin/bash .prepackage.sh

package:
  individually: true

functions:
  connect:
    handler: src/proxy/connect.handle
    timeout: 3
    memorySize: 256
    events:
      - websocket:
          route: $connect
  disconnect:
    handler: src/proxy/disconnect.handle
    timeout: 3
    memorySize: 256
    events:
      - websocket:
          route: $disconnect
  message:
    handler: src/proxy/message.handle
    timeout: 3
    memorySize: 256
    events:
      - websocket:
          route: $default
  game:
    handler: src/game/actor.handle
    timeout: 900
    memorySize: 1024
  serve:
    handler: src/html/serve.handle
    timeout: 6
    memorySize: 256
    events:
      - http: GET /
      - http: GET /{file}
      - http: GET /static/css/{file}
      - http: GET /static/js/{file}
      - http: GET /static/media/{file}
    package:
      include:
        - html-bundle.zip
